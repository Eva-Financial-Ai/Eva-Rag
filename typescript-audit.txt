
> eva-ai-fe@0.1.0 typecheck
> tsc --noEmit

design-system/components/Badge.tsx(73,29): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Badge.tsx(74,29): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Badge.tsx(82,29): error TS2339: Property 'semantic' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Badge.tsx(83,29): error TS2339: Property 'semantic' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Badge.tsx(85,29): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Badge.tsx(86,29): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Badge.tsx(95,55): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Badge.tsx(95,96): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Badge.tsx(96,55): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Badge.tsx(96,96): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Badge.tsx(104,55): error TS2339: Property 'semantic' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Badge.tsx(104,96): error TS2339: Property 'semantic' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Badge.tsx(105,55): error TS2339: Property 'semantic' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Badge.tsx(105,99): error TS2339: Property 'semantic' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Badge.tsx(107,55): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Badge.tsx(107,98): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Badge.tsx(108,55): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Badge.tsx(108,98): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Button.tsx(73,34): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Button.tsx(73,90): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Button.tsx(73,150): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Button.tsx(74,36): error TS2339: Property 'neutral' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Button.tsx(74,96): error TS2339: Property 'neutral' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Button.tsx(75,33): error TS2339: Property 'semantic' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Button.tsx(75,92): error TS2339: Property 'semantic' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Button.tsx(75,152): error TS2339: Property 'semantic' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Button.tsx(77,60): error TS2339: Property 'neutral' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Button.tsx(77,152): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Card.tsx(102,29): error TS2339: Property 'theme' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Card.tsx(102,90): error TS2339: Property 'theme' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Card.tsx(105,29): error TS2339: Property 'theme' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Card.tsx(105,78): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Card.tsx(105,119): error TS2339: Property 'theme' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Card.tsx(106,51): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Card.tsx(108,29): error TS2339: Property 'theme' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Card.tsx(108,98): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Card.tsx(108,180): error TS2339: Property 'theme' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Card.tsx(109,71): error TS2339: Property 'brand' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
design-system/components/Card.tsx(111,66): error TS2339: Property 'theme' does not exist on type '{ readonly primary: { readonly 50: "#f0f9ff"; readonly 100: "#e0f2fe"; readonly 500: "#0ea5e9"; readonly 600: "#0284c7"; readonly 700: "#0369a1"; readonly 900: "#0c4a6e"; }; readonly success: { readonly 50: "#f0fdf4"; readonly 100: "#dcfce7"; readonly 500: "#22c55e"; readonly 600: "#16a34a"; readonly 700: "#15803d";...'.
src/App.tsx(60,7): error TS2322: Type '{ staleTime: number; cacheTime: number; refetchOnWindowFocus: false; retry: number; }' is not assignable to type 'OmitKeyof<QueryObserverOptions<unknown, Error, unknown, unknown, readonly unknown[], never>, "suspense" | "queryKey", "strictly">'.
  Object literal may only specify known properties, and 'cacheTime' does not exist in type 'OmitKeyof<QueryObserverOptions<unknown, Error, unknown, unknown, readonly unknown[], never>, "suspense" | "queryKey", "strictly">'.
src/App.tsx(78,11): error TS2339: Property 'state' does not exist on type 'WorkflowContextType'.
src/components/_archived_eva_components/EvaAIChatInterface.tsx(12,10): error TS2614: Module '"../../contexts/CustomerContext"' has no exported member 'useCustomerContext'. Did you mean to use 'import useCustomerContext from "../../contexts/CustomerContext"' instead?
src/components/_archived_eva_components/EVAAssistantManager.tsx(5,29): error TS2307: Cannot find module '../contexts/UserContext' or its corresponding type declarations.
src/components/_archived_eva_components/EVAAssistantManager.tsx(24,11): error TS2339: Property 'setIsEvaChatOpen' does not exist on type '{}'.
src/components/_archived_eva_components/EVAAssistantManager.tsx(24,29): error TS2339: Property 'sidebarCollapsed' does not exist on type '{}'.
src/components/_archived_eva_components/EVAAssistantWithCustomAgents.tsx(3,33): error TS2307: Cannot find module './CreateCustomAIAgent' or its corresponding type declarations.
src/components/_archived_eva_components/EVATaskIntegration.tsx(3,28): error TS2307: Cannot find module './tasks/TaskManagement' or its corresponding type declarations.
src/components/admin/StreamAnalytics.tsx(128,12): error TS2604: JSX element type 'Icon' does not have any construct or call signatures.
src/components/analytics/RoleAnalyticsDisplay.tsx(75,12): error TS2678: Type '"investor"' is not comparable to type 'UserRole'.
src/components/Auth/ProtectedRoute.tsx(15,39): error TS2339: Property 'error' does not exist on type '{ user: MockUser; token: string; isLoading: boolean; isAuthenticated: boolean; isAdmin: boolean; hasStreamAccess: boolean; hasPermission: (permission: string) => boolean; hasRole: (role: string) => boolean; ... 10 more ...; error: any; } | { ...; }'.
src/components/chat/FileLockChatInterface.tsx(9,10): error TS2614: Module '"../../contexts/CustomerContext"' has no exported member 'useCustomerContext'. Did you mean to use 'import useCustomerContext from "../../contexts/CustomerContext"' instead?
src/components/common/CustomerSelector/CustomerSelector.tsx(9,10): error TS2614: Module '"../../../contexts/CustomerContext"' has no exported member 'useCustomerContext'. Did you mean to use 'import useCustomerContext from "../../../contexts/CustomerContext"' instead?
src/components/credit/AutoOriginationsDashboard.tsx(10,3): error TS2614: Module '"../layout/TopNavbar"' has no exported member 'UserRoleTypeString'. Did you mean to use 'import UserRoleTypeString from "../layout/TopNavbar"' instead?
src/components/credit/AutoOriginationsDashboard.tsx(11,3): error TS2614: Module '"../layout/TopNavbar"' has no exported member 'UserSpecificRoleType'. Did you mean to use 'import UserSpecificRoleType from "../layout/TopNavbar"' instead?
src/components/credit/AutoOriginationsDashboard.tsx(12,3): error TS2614: Module '"../layout/TopNavbar"' has no exported member 'DemoContextType'. Did you mean to use 'import DemoContextType from "../layout/TopNavbar"' instead?
src/components/credit/RoleBasedDashboard.tsx(8,21): error TS2614: Module '"../layout/TopNavbar"' has no exported member 'UserRoleTypeString'. Did you mean to use 'import UserRoleTypeString from "../layout/TopNavbar"' instead?
src/components/credit/TransactionView.tsx(3,21): error TS2614: Module '"../layout/TopNavbar"' has no exported member 'UserRoleTypeString'. Did you mean to use 'import UserRoleTypeString from "../layout/TopNavbar"' instead?
src/components/dashboard/ContextAwareDashboard.tsx(11,5): error TS2339: Property 'currentTransaction' does not exist on type 'TransactionContextType'.
src/components/dashboard/ContextAwareDashboard.tsx(12,5): error TS2339: Property 'currentCustomer' does not exist on type 'TransactionContextType'.
src/components/dashboard/ContextAwareDashboard.tsx(13,5): error TS2339: Property 'contextualData' does not exist on type 'TransactionContextType'.
src/components/dashboard/ContextAwareDashboard.tsx(14,5): error TS2339: Property 'getDealStructureContext' does not exist on type 'TransactionContextType'.
src/components/dashboard/ContextAwareDashboard.tsx(15,5): error TS2339: Property 'getTransactionExecutionContext' does not exist on type 'TransactionContextType'.
src/components/dashboard/ContextAwareDashboard.tsx(16,5): error TS2339: Property 'getRiskMapContext' does not exist on type 'TransactionContextType'.
src/components/dashboard/ContextAwareDashboard.tsx(17,5): error TS2339: Property 'getFilelockContext' does not exist on type 'TransactionContextType'.
src/components/dashboard/ContextAwareDashboard.tsx(18,5): error TS2339: Property 'getSmartMatchContext' does not exist on type 'TransactionContextType'.
src/components/dashboard/ContextAwareDashboard.tsx(19,5): error TS2339: Property 'getTransactionExplorerContext' does not exist on type 'TransactionContextType'.
src/components/dashboard/ContextAwareDashboard.tsx(20,5): error TS2339: Property 'subscribeToContextUpdates' does not exist on type 'TransactionContextType'.
src/components/deal/DealStructureEditor.tsx(4,10): error TS2614: Module '"./SmartMatchEngine"' has no exported member 'MatchResult'. Did you mean to use 'import MatchResult from "./SmartMatchEngine"' instead?
src/components/deal/DealStructureEditor.tsx(4,23): error TS2614: Module '"./SmartMatchEngine"' has no exported member 'UserRole'. Did you mean to use 'import UserRole from "./SmartMatchEngine"' instead?
src/components/EVAAssistantWithCustomerContext.tsx(36,11): error TS2339: Property 'userType' does not exist on type 'UserContextType'.
src/components/EVABusinessLookupIntegration.tsx(36,11): error TS2339: Property 'customer' does not exist on type 'EVACustomerContextType | { customer: null; updateCustomerBusinessRecords: () => void; }'.
src/components/EVABusinessLookupIntegration.tsx(69,80): error TS2448: Block-scoped variable 'formatResultsForEVA' used before its declaration.
src/components/EVABusinessLookupIntegration.tsx(318,9): error TS2322: Type '{ onResultsReady: (results: BusinessLookupResult) => Promise<void>; onError: (error: string) => void; businessName: any; dbaName: string; states: any[]; showCloseButton: boolean; onClose: () => void; className: string; }' is not assignable to type 'IntrinsicAttributes & BusinessLookupToolProps'.
  Property 'businessName' does not exist on type 'IntrinsicAttributes & BusinessLookupToolProps'.
src/components/forms/UniversalFormGenerator.tsx(539,6): error TS2322: Type '{ title: string; description: string; fields: FormFieldConfig[]; submitLabel?: string; cancelLabel?: string; layout: "single" | "two-column" | "three-column"; onSubmit?: (data: any) => void | Promise<...>; onCancel?: () => void; defaultValues?: Record<...>; loading?: boolean; }' is not assignable to type 'FormConfig'.
  Property 'onSubmit' is optional in type '{ title: string; description: string; fields: FormFieldConfig[]; submitLabel?: string; cancelLabel?: string; layout: "single" | "two-column" | "three-column"; onSubmit?: (data: any) => void | Promise<...>; onCancel?: () => void; defaultValues?: Record<...>; loading?: boolean; }' but required in type 'FormConfig'.
src/components/forms/UniversalFormGenerator.tsx(616,6): error TS2322: Type '{ title: string; description: string; fields: FormFieldConfig[]; submitLabel?: string; cancelLabel?: string; layout: "single" | "two-column" | "three-column"; onSubmit?: (data: any) => void | Promise<...>; onCancel?: () => void; defaultValues?: Record<...>; loading?: boolean; }' is not assignable to type 'FormConfig'.
  Property 'onSubmit' is optional in type '{ title: string; description: string; fields: FormFieldConfig[]; submitLabel?: string; cancelLabel?: string; layout: "single" | "two-column" | "three-column"; onSubmit?: (data: any) => void | Promise<...>; onCancel?: () => void; defaultValues?: Record<...>; loading?: boolean; }' but required in type 'FormConfig'.
src/components/layout/EnhancedTopNavigation.tsx(44,60): error TS2304: Cannot find name 'Customer'.
src/components/layout/UniversalNavigation.tsx(17,10): error TS2614: Module '"../../contexts/CustomerContext"' has no exported member 'useCustomerContext'. Did you mean to use 'import useCustomerContext from "../../contexts/CustomerContext"' instead?
src/components/management/CustomerManager.tsx(125,7): error TS2322: Type '{ street: string; city: string; state: string; zipCode: string; country: string; }' is not assignable to type '{ street: string; city: string; state: string; zip: string; country: string; }'.
  Object literal may only specify known properties, and 'zipCode' does not exist in type '{ street: string; city: string; state: string; zip: string; country: string; }'.
src/components/management/CustomerManager.tsx(134,5): error TS2322: Type '"A++"' is not assignable to type '"medium" | "low" | "high" | "very-high"'.
src/components/management/CustomerManager.tsx(173,7): error TS2322: Type '{ street: string; city: string; state: string; zipCode: string; country: string; }' is not assignable to type '{ street: string; city: string; state: string; zip: string; country: string; }'.
  Object literal may only specify known properties, and 'zipCode' does not exist in type '{ street: string; city: string; state: string; zip: string; country: string; }'.
src/components/management/CustomerManager.tsx(182,5): error TS2322: Type '"A+"' is not assignable to type '"medium" | "low" | "high" | "very-high"'.
src/components/OwnerManager.tsx(4,10): error TS2614: Module '"../components/layout/TopNavbar"' has no exported member 'UserRoleTypeString'. Did you mean to use 'import UserRoleTypeString from "../components/layout/TopNavbar"' instead?
src/components/psychology/EnhancedCrossSellingCatalog.tsx(194,7): error TS2322: Type '"anchoring"' is not assignable to type '"scarcity" | "social_proof" | "loss_aversion" | "reciprocity" | "authority"'.
src/components/ResponsiveTestingPanel.tsx(2,42): error TS2307: Cannot find module './EVAAssistantWithCustomAgents' or its corresponding type declarations.
src/components/risk/EvaScore.tsx(24,26): error TS2304: Cannot find name 'EvaScoreProps'.
src/components/risk/RiskLabConfigurator.tsx(86,9): error TS2304: Cannot find name 'externalLoanType'.
src/components/risk/RiskLabConfigurator.tsx(86,29): error TS2304: Cannot find name 'externalLoanType'.
src/components/risk/RiskLabConfigurator.tsx(87,7): error TS2552: Cannot find name 'setLoanType'. Did you mean 'loanType'?
src/components/risk/RiskLabConfigurator.tsx(87,19): error TS2304: Cannot find name 'externalLoanType'.
src/components/risk/RiskLabConfigurator.tsx(89,7): error TS2304: Cannot find name 'externalLoanType'.
src/components/risk/RiskLabConfigurator.tsx(254,5): error TS2552: Cannot find name 'setLoanType'. Did you mean 'loanType'?
src/components/risk/RiskMapCore.tsx(41,21): error TS2345: Argument of type '"lab"' is not assignable to parameter of type 'SetStateAction<RiskView>'.
src/components/SmartMatching.tsx(73,7): error TS2741: Property 'admin' is missing in type '{ lender: ("borrower" | "broker")[]; borrower: ("lender" | "broker")[]; broker: ("borrower" | "lender")[]; vendor: ("borrower" | "lender" | "broker")[]; }' but required in type 'Record<UserRole, UserRole[]>'.
src/components/SmartMatching.tsx(81,7): error TS2741: Property 'admin' is missing in type '{ borrower: ({ id: string; name: string; role: "lender"; description: string; rate: number; term: number; industry: string; location: string; yearEstablished: number; fundingSpeed: string; avatarUrl: string; matchScore: number; dealVolume: string; contactInfo: { ...; }; } | { ...; })[]; broker: ({ ...; } | { ...; })...' but required in type 'Record<UserRole, MatchProfile[]>'.
src/components/TeamMembersPanel.tsx(2,10): error TS2614: Module '"./layout/TopNavbar"' has no exported member 'UserRoleTypeString'. Did you mean to use 'import UserRoleTypeString from "./layout/TopNavbar"' instead?
src/components/TeamMembersPanel.tsx(2,30): error TS2614: Module '"./layout/TopNavbar"' has no exported member 'UserSpecificRoleType'. Did you mean to use 'import UserSpecificRoleType from "./layout/TopNavbar"' instead?
src/contexts/ServiceProvider.tsx(3,36): error TS2307: Cannot find module '@tanstack/react-query-devtools' or its corresponding type declarations.
src/contexts/UserTypeContext.tsx(12,10): error TS2614: Module '"../components/layout/TopNavbar"' has no exported member 'UserRoleTypeString'. Did you mean to use 'import UserRoleTypeString from "../components/layout/TopNavbar"' instead?
src/contexts/UserTypeContext.tsx(12,30): error TS2614: Module '"../components/layout/TopNavbar"' has no exported member 'UserSpecificRoleType'. Did you mean to use 'import UserSpecificRoleType from "../components/layout/TopNavbar"' instead?
src/hooks/useApiData.ts(24,17): error TS2339: Property 'onError' does not exist on type 'Omit<UseQueryOptions<TData, ApiError, TData, readonly unknown[]>, "queryKey" | "queryFn">'.
src/hooks/useApiData.ts(25,15): error TS2339: Property 'onError' does not exist on type 'Omit<UseQueryOptions<TData, ApiError, TData, readonly unknown[]>, "queryKey" | "queryFn">'.
src/hooks/useApiData.ts(77,17): error TS2339: Property 'onError' does not exist on type 'Omit<UseQueryOptions<TData, ApiError, TData, readonly unknown[]>, "queryKey" | "queryFn">'.
src/hooks/useApiData.ts(78,15): error TS2339: Property 'onError' does not exist on type 'Omit<UseQueryOptions<TData, ApiError, TData, readonly unknown[]>, "queryKey" | "queryFn">'.
src/hooks/useApiQuery.ts(12,7): error TS2322: Type '{ refetchOnWindowFocus: boolean; retry: number; staleTime: number; cacheTime: number; }' is not assignable to type 'OmitKeyof<QueryObserverOptions<unknown, Error, unknown, unknown, readonly unknown[], never>, "suspense" | "queryKey", "strictly">'.
  Object literal may only specify known properties, and 'cacheTime' does not exist in type 'OmitKeyof<QueryObserverOptions<unknown, Error, unknown, unknown, readonly unknown[], never>, "suspense" | "queryKey", "strictly">'.
src/hooks/useApiQuery.ts(71,42): error TS2559: Type 'string[]' has no properties in common with type 'InvalidateQueryFilters<readonly unknown[]>'.
src/hooks/useAuth.ts(142,72): error TS2345: Argument of type '(credentials: LoginCredentials) => Promise<AuthResponse>' is not assignable to parameter of type '(variables: LoginCredentials) => Promise<ApiResponse<AuthResponse>>'.
  Type 'Promise<AuthResponse>' is not assignable to type 'Promise<ApiResponse<AuthResponse>>'.
    Property 'status' is missing in type 'AuthResponse' but required in type 'ApiResponse<AuthResponse>'.
src/hooks/useAuth.ts(158,90): error TS2339: Property 'register' does not exist on type 'typeof import("/Users/joeybro/Downloads/evafi-ai-fe-demo-dev-3-testing-to-craco/src/api/authService")'.
src/hooks/useAuth.ts(224,55): error TS2554: Expected 0 arguments, but got 1.
src/hooks/useAuth.ts(226,25): error TS2339: Property 'token' does not exist on type 'boolean'.
src/hooks/useAuth.ts(227,59): error TS2339: Property 'token' does not exist on type 'boolean'.
src/hooks/useAuth.ts(229,23): error TS2339: Property 'token' does not exist on type 'boolean'.
src/hooks/useAuth.ts(245,45): error TS2339: Property 'validateToken' does not exist on type 'typeof import("/Users/joeybro/Downloads/evafi-ai-fe-demo-dev-3-testing-to-craco/src/api/authService")'.
src/hooks/useFeatureFlag.ts(2,36): error TS2307: Cannot find module '../services/edgeConfigService' or its corresponding type declarations.
src/pages/ContextAwareDemo.tsx(8,5): error TS2339: Property 'currentTransaction' does not exist on type 'TransactionContextType'.
src/pages/ContextAwareDemo.tsx(9,5): error TS2339: Property 'currentCustomer' does not exist on type 'TransactionContextType'.
src/pages/ContextAwareDemo.tsx(10,5): error TS2339: Property 'getAvailableTools' does not exist on type 'TransactionContextType'.
src/pages/ContextAwareDemo.tsx(11,5): error TS2339: Property 'getRelatedTransactions' does not exist on type 'TransactionContextType'.
src/services/BusinessLookupService.ts(523,11): error TS2322: Type '"biennial_statement"' is not assignable to type 'DocumentType'.
src/services/ConversationIntelligenceService.ts(1,26): error TS2307: Cannot find module '../types/customer' or its corresponding type declarations.
src/tools/BusinessLookupTool.tsx(48,46): error TS2339: Property 'business_info' does not exist on type 'CustomerProfile'.
src/tools/BusinessLookupTool.tsx(51,40): error TS2339: Property 'business_info' does not exist on type 'CustomerProfile'.
src/tools/BusinessLookupTool.tsx(52,35): error TS2339: Property 'business_info' does not exist on type 'CustomerProfile'.
src/types/businessLookup.ts(295,56): error TS2322: Type '"periodic_report"' is not assignable to type 'DocumentType'.
src/types/businessLookup.ts(366,56): error TS2322: Type '"annual_registration"' is not assignable to type 'DocumentType'.
src/types/UserTypes.ts(5,10): error TS2614: Module '"../components/layout/TopNavbar"' has no exported member 'UserSpecificRoleType'. Did you mean to use 'import UserSpecificRoleType from "../components/layout/TopNavbar"' instead?
src/utils/envValidator.ts(40,19): error TS2540: Cannot assign to 'REACT_APP_ENVIRONMENT' because it is a read-only property.
